
from aiogram import Router, F
from aiogram.types import Message, InputMediaPhoto, InputMediaVideo, FSInputFile
from aiogram.enums import ChatType, ParseMode
from aiogram.fsm.context import FSMContext
import os

from app.states import Form
from app.keyboards import get_cancel_keyboard, get_main_keyboard
from app.config import GROUP_ID
from app.utils import get_moscow_time
from app.image_processor import ImageProcessor
from app.google_sheets import gs_logger



router = Router()

@router.message(F.chat.type == ChatType.PRIVATE, F.text == "üî• –°–≤–∞—Ä–∫–∞")
async def handle_welding_work(message: Message, state: FSMContext):
    await state.set_state(Form.welding_work)
    await message.answer(
        "üî• –°–≤–∞—Ä–∫–∞:\n"
        "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<b>–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã / –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ / –≤–∏–¥ —Ä–∞–±–æ—Ç</b>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <code>–¶–µ—Ö 1 / –°–∞–≤–µ–ª—å–µ–≤, –¢–∞—Ä–∞—Å–æ–≤ / —Å–≤–∞—Ä–∫–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</code>",
        parse_mode=ParseMode.HTML,
        reply_markup=get_cancel_keyboard()
    )

@router.message(Form.welding_work, F.text)
async def handle_welding_work_data(message: Message, state: FSMContext):
    await state.update_data(welding_info=message.text)
    await message.answer("üì∏ –ü–ï–†–í–´–ú –°–û–û–ë–©–ï–ù–ò–ï–ú –û–¢–ü–†–ê–í–¨–¢–ï —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –ù–ê–ß–ê–õ–ê —Ä–∞–±–æ—Ç", reply_markup=get_cancel_keyboard())

@router.message(Form.welding_work, F.photo | F.video)
async def handle_welding_work_media(message: Message, state: FSMContext):
    try:
        data = await state.get_data()
        welding_info = data.get("welding_info")
        if not welding_info:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–∞—Ö!", reply_markup=get_cancel_keyboard())
            return

        current_time = get_moscow_time().strftime("%Y-%m-%d %H:%M:%S")

        if message.photo:
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
            file_id = message.photo[-1].file_id
            file = await message.bot.get_file(file_id)
            input_path = f"app/data/temp_{file_id}.jpg"
            await message.bot.download_file(file.file_path, destination=input_path)

            # –ù–∞–∫–ª–∞–¥—ã–≤–∞–µ–º –≤—Ä–µ–º—è
            output_path = f"app/data/output_{file_id}.jpg"
            ImageProcessor.add_text_with_outline(input_path, output_path, current_time)

            media_item = {"type": "photo", "path": output_path}
            os.remove(input_path)  # —É–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–∏–∫
        elif message.video:
            # –î–ª—è –≤–∏–¥–µ–æ —Ç–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º (–≤—Ä–µ–º—è –≤ —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏)
            file_id = message.video.file_id
            file = await message.bot.get_file(file_id)
            output_path = f"app/data/output_{file_id}.mp4"
            await message.bot.download_file(file.file_path, destination=output_path)
            media_item = {"type": "video", "path": output_path}
        else:
            await message.answer("‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ.", reply_markup=get_cancel_keyboard())
            return

        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –º–µ–¥–∏–∞ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∂–¥—ë–º –≤—Ç–æ—Ä–æ–µ
        if "start_media" not in data:
            await state.update_data(start_media=media_item)
            await message.answer("‚úÖ –§–æ—Ç–æ/–≤–∏–¥–µ–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç –ø—Ä–∏–Ω—è—Ç–æ. –í–¢–û–†–´–ú –°–û–û–ë–©–ï–ù–ò–ï–ú –û–¢–ü–†–ê–í–¨–¢–ï —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –û–ö–û–ù–ß–ê–ù–ò–Ø —Ä–∞–±–æ—Ç:", reply_markup=get_cancel_keyboard())
            return

        # –í—Ç–æ—Ä–æ–µ –º–µ–¥–∏–∞ ‚Äî —Å–æ–±–∏—Ä–∞–µ–º –∞–ª—å–±–æ–º
        start = data["start_media"]
        caption = (
            f"üî• <b>–°–≤–∞—Ä–æ—á–Ω—ã–µ/–æ–≥–Ω–µ–≤—ã–µ —Ä–∞–±–æ—Ç—ã</b>\n"
            f"‚è∞ –í—Ä–µ–º—è: {current_time}\n"
            f"üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {welding_info}"
        )

        media = []
        # –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî —Å –ø–æ–¥–ø–∏—Å—å—é
        if start["type"] == "photo":
            media.append(InputMediaPhoto(media=FSInputFile(start["path"]), caption=caption, parse_mode=ParseMode.HTML))
        else:
            media.append(InputMediaVideo(media=FSInputFile(start["path"]), caption=caption, parse_mode=ParseMode.HTML))

        # –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
        if media_item["type"] == "photo":
            media.append(InputMediaPhoto(media=FSInputFile(media_item["path"])))
        else:
            media.append(InputMediaVideo(media=FSInputFile(media_item["path"])))

        sent_message = await message.bot.send_media_group(chat_id=GROUP_ID, media=media)

        # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        for m in [start, media_item]:
            try:
                os.remove(m["path"])
            except FileNotFoundError:
                pass

        await state.clear()
        await message.answer("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Å–≤–∞—Ä–æ—á–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—É!", reply_markup=get_main_keyboard())
            
        await gs_logger.log_event(  # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            "–°–≤–∞—Ä–æ—á–Ω—ã–µ/–æ–≥–Ω–µ–≤—ã–µ —Ä–∞–±–æ—Ç—ã",
            message.from_user.id,
            sent_message[0].message_id
        )

    except Exception:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö!", reply_markup=get_main_keyboard())