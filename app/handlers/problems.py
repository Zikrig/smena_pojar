import os
from aiogram import Router, F
from aiogram.types import Message, FSInputFile, CallbackQuery
from aiogram.enums import ChatType 
from aiogram.fsm.context import FSMContext
from datetime import datetime
from aiogram.enums import ParseMode

from app.states import Form
from app.keyboards import get_cancel_keyboard, get_main_keyboard, get_resolved_keyboard
from app.image_processor import ImageProcessor
from app.config import GROUP_ID
from app.utils import get_moscow_time

router = Router()

@router.message(F.chat.type == ChatType.PRIVATE, F.text == "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞")
async def handle_problem_report(message: Message, state: FSMContext):
    await state.set_state(Form.problem_report)
    await message.answer(
        "‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ:\n"
        "1. –ù–∞–∂–º–∏—Ç–µ ¬´üìé¬ª\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ ¬´–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ¬ª\n"
        "3. –°–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã\n"
        "4. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ\n"
        "5. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ",
        reply_markup=get_cancel_keyboard()
    )

@router.message(Form.problem_report, F.photo)
async def handle_problem_report_photo(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ —Å –Ω–∞–ª–æ–∂–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏
    file_id = message.photo[-1].file_id
    file = await message.bot.get_file(file_id)
    input_path = f"app/data/temp_{file_id}.jpg"
    await message.bot.download_file(file.file_path, destination=input_path)
    
    # –ù–∞–∫–ª–∞–¥—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Ñ–æ—Ç–æ
    current_time = get_moscow_time().strftime("%Y-%m-%d %H:%M:%S")
    output_path = f"app/data/output_{file_id}.jpg"
    
    processor = ImageProcessor()
    processor.add_text_with_outline(input_path, output_path, current_time)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –≤ –≥—Ä—É–ø–ø—É —Å –∫–Ω–æ–ø–∫–æ–π "—Ä–µ—à–µ–Ω–æ"
    output_file = FSInputFile(output_path)
    
    caption = f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ\n‚è∞ –í—Ä–µ–º—è: {current_time}"
    if message.caption:
        caption += f"\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {message.caption}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    sent_message = await message.bot.send_photo(
        chat_id=GROUP_ID,
        photo=output_file,
        caption=caption,
        parse_mode=ParseMode.HTML,
        reply_markup=get_resolved_keyboard()
    )
    
    # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º (–∑–∞–∫—Ä–µ–ø–ª—è–µ–º) —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ
    try:
        await message.bot.pin_chat_message(
            chat_id=GROUP_ID,
            message_id=sent_message.message_id
        )
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    os.remove(input_path)
    os.remove(output_path)
    
    await state.clear()
    await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø–µ!", reply_markup=get_main_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "—Ä–µ—à–µ–Ω–æ"
@router.callback_query(F.data == "resolve_problem")
async def handle_problem_resolved(callback: CallbackQuery):
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–º–µ—Ç–∫—É
    new_caption = callback.message.caption + "\n\n‚úÖ –†–ï–®–ï–ù–û"
    
    try:
        # –û—Ç–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.bot.unpin_chat_message(
            chat_id=callback.message.chat.id,
            message_id=callback.message.message_id
        )
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_caption(
        caption=new_caption,
        parse_mode=ParseMode.HTML,
        reply_markup=None  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É
    )
    
    await callback.answer("–ü—Ä–æ–±–ª–µ–º–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ —Ä–µ—à–µ–Ω–Ω–∞—è!")