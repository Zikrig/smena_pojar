from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ChatType 
from aiogram.fsm.context import FSMContext
from datetime import datetime
from aiogram.enums import ParseMode

from app.states import Form
from app.keyboards import get_fire_call_keyboard, get_main_keyboard
from app.config import GROUP_ID
from app.utils import get_moscow_time
from app.google_sheets import gs_logger

router = Router()

@router.message(F.chat.type == ChatType.PRIVATE, F.text == "üìû –ó–≤–æ–Ω–æ–∫ –≤ –ø–æ–∂–∞—Ä–Ω—É—é —á–∞—Å—Ç—å")
async def handle_fire_call(message: Message, state: FSMContext):
    await state.set_state(Form.fire_call)
    await message.answer(
        "üìû –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è –∑–≤–æ–Ω–∫–∞ –≤ –ø–æ–∂–∞—Ä–Ω—É—é —á–∞—Å—Ç—å:",
        reply_markup=get_fire_call_keyboard()
    )

@router.callback_query(Form.fire_call, F.data.startswith("call_"))
async def handle_fire_call_number(callback: CallbackQuery, state: FSMContext):
    number = callback.data.replace("call_", "")
    
    current_time = get_moscow_time().strftime("%H:%M")
    
    await callback.bot.send_message(
        chat_id=GROUP_ID,
        text=f"üìû <b>–ó–≤–æ–Ω–æ–∫ –≤ –ø–æ–∂–∞—Ä–Ω—É—é —á–∞—Å—Ç—å</b>\n‚è∞ –í—Ä–µ–º—è: {current_time}\nüìû –ù–æ–º–µ—Ä: {number}",
        parse_mode=ParseMode.HTML
    )
    
    await state.clear()
    sent_message = await callback.message.answer(
        f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–≤–æ–Ω–∫–µ –Ω–∞ –Ω–æ–º–µ—Ä {number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø—É!",
        reply_markup=get_main_keyboard()
    )
    await callback.answer()
    
    await gs_logger.log_event(  # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    "–ó–≤–æ–Ω–æ–∫ –≤ –ø–æ–∂–∞—Ä–Ω—É—é —á–∞—Å—Ç—å",
    callback.from_user.id,
    sent_message.message_id
    )